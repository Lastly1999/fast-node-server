Index: src/modules/user/user.controller.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Body, Controller, Post } from \"@nestjs/common\"\r\nimport { CreateUserDto } from \"./dto/create-user.dto\"\r\nimport { UserService } from \"./user.service\"\r\nimport { EntityManager, Transaction, TransactionManager } from \"typeorm\"\r\n\r\n@Controller(\"user\")\r\nexport class UserController {\r\n    constructor(private readonly userService: UserService) {}\r\n\r\n    @Post(\"user\")\r\n    @Transaction()\r\n    createUser(\r\n        @Body() createUserDto: CreateUserDto,\r\n        @TransactionManager() manage: EntityManager,\r\n    ) {\r\n        return this.userService.createUser(createUserDto, manage)\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/modules/user/user.controller.ts b/src/modules/user/user.controller.ts
--- a/src/modules/user/user.controller.ts	(revision 7ad534ab3a12796689f90b43ade1bc3d67c50ad6)
+++ b/src/modules/user/user.controller.ts	(date 1638870557199)
@@ -5,14 +5,14 @@
 
 @Controller("user")
 export class UserController {
-    constructor(private readonly userService: UserService) {}
+    constructor(private readonly userService: UserService) { }
 
     @Post("user")
     @Transaction()
-    createUser(
+    async createUser(
         @Body() createUserDto: CreateUserDto,
         @TransactionManager() manage: EntityManager,
     ) {
-        return this.userService.createUser(createUserDto, manage)
+        return await this.userService.createUser(createUserDto, manage)
     }
 }
Index: src/modules/user/user.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\"\r\nimport { EntityManager, Repository } from \"typeorm\"\r\nimport { InjectRepository } from \"@nestjs/typeorm\"\r\nimport { User } from \"./user.entity\"\r\nimport { CreateUserDto } from \"./dto/create-user.dto\"\r\nimport { Role } from \"../role/role.entity\"\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    constructor(\r\n        @InjectRepository(User)\r\n        private readonly userRepository: Repository<User>,\r\n    ) {}\r\n\r\n    /**\r\n     * 创建用户\r\n     * @param createUserDto\r\n     * @param manage\r\n     */\r\n    async createUser(createUserDto: CreateUserDto, manage: EntityManager) {\r\n        const userEntity = new User()\r\n        await this.userRepository.create(userEntity)\r\n        return \"创建成功\"\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/modules/user/user.service.ts b/src/modules/user/user.service.ts
--- a/src/modules/user/user.service.ts	(revision 7ad534ab3a12796689f90b43ade1bc3d67c50ad6)
+++ b/src/modules/user/user.service.ts	(date 1638840099668)
@@ -1,9 +1,8 @@
-import { HttpException, HttpStatus, Injectable } from "@nestjs/common"
+import { Injectable } from "@nestjs/common"
 import { EntityManager, Repository } from "typeorm"
 import { InjectRepository } from "@nestjs/typeorm"
 import { User } from "./user.entity"
 import { CreateUserDto } from "./dto/create-user.dto"
-import { Role } from "../role/role.entity"
 
 @Injectable()
 export class UserService {
Index: src/modules/user/user.entity.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\r\n    Entity,\r\n    PrimaryGeneratedColumn,\r\n    Column,\r\n    ManyToMany,\r\n    CreateDateColumn,\r\n    UpdateDateColumn,\r\n    OneToMany,\r\n    BaseEntity,\r\n    JoinColumn,\r\n} from \"typeorm\"\r\nimport { Role } from \"../role/role.entity\"\r\n\r\n/**\r\n * 用户表\r\n */\r\n@Entity(\"sys_users\")\r\nexport class User extends BaseEntity {\r\n    @PrimaryGeneratedColumn({ comment: \"用户id\" })\r\n    id: number\r\n\r\n    @Column({ name: \"user_name\", comment: \"用户名\" })\r\n    userName: string\r\n\r\n    @Column({ name: \"pass_word\", comment: \"账户密码\" })\r\n    passWord: string\r\n\r\n    @Column({ name: \"user_avatar\", comment: \"用户头像\" })\r\n    userAvatar: string\r\n\r\n    @Column({ name: \"nike_name\", comment: \"用户昵称\" })\r\n    nikeName: string\r\n\r\n    @Column({ name: \"role_id\", comment: \"用户角色id\" })\r\n    roleId: string\r\n\r\n    @CreateDateColumn({ name: \"create_at\" })\r\n    createAt: Date\r\n\r\n    @UpdateDateColumn({ name: \"update_at\" })\r\n    updateAt: Date\r\n\r\n    @ManyToMany((type) => Role, (role) => role.users)\r\n    @JoinColumn({\r\n        referencedColumnName: \"role_id\",\r\n    })\r\n    roles: Role[]\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/modules/user/user.entity.ts b/src/modules/user/user.entity.ts
--- a/src/modules/user/user.entity.ts	(revision 7ad534ab3a12796689f90b43ade1bc3d67c50ad6)
+++ b/src/modules/user/user.entity.ts	(date 1638845038668)
@@ -5,7 +5,6 @@
     ManyToMany,
     CreateDateColumn,
     UpdateDateColumn,
-    OneToMany,
     BaseEntity,
     JoinColumn,
 } from "typeorm"
@@ -40,7 +39,7 @@
     @UpdateDateColumn({ name: "update_at" })
     updateAt: Date
 
-    @ManyToMany((type) => Role, (role) => role.users)
+    @ManyToMany(() => Role, (role) => role.users)
     @JoinColumn({
         referencedColumnName: "role_id",
     })
Index: src/modules/base-menu/base-menu.service.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Test, TestingModule } from '@nestjs/testing';\r\nimport { BaseMenuService } from './base-menu.service';\r\n\r\ndescribe('BaseMenuService', () => {\r\n  let service: BaseMenuService;\r\n\r\n  beforeEach(async () => {\r\n    const module: TestingModule = await Test.createTestingModule({\r\n      providers: [BaseMenuService],\r\n    }).compile();\r\n\r\n    service = module.get<BaseMenuService>(BaseMenuService);\r\n  });\r\n\r\n  it('should be defined', () => {\r\n    expect(service).toBeDefined();\r\n  });\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/modules/base-menu/base-menu.service.spec.ts b/src/modules/base-menu/base-menu.service.spec.ts
--- a/src/modules/base-menu/base-menu.service.spec.ts	(revision 7ad534ab3a12796689f90b43ade1bc3d67c50ad6)
+++ b/src/modules/base-menu/base-menu.service.spec.ts	(date 1638844972475)
@@ -1,18 +1,18 @@
-import { Test, TestingModule } from '@nestjs/testing';
-import { BaseMenuService } from './base-menu.service';
+import { Test, TestingModule } from "@nestjs/testing"
+import { BaseMenuService } from "./base-menu.service"
 
-describe('BaseMenuService', () => {
-  let service: BaseMenuService;
+describe("BaseMenuService", () => {
+    let service: BaseMenuService
 
-  beforeEach(async () => {
-    const module: TestingModule = await Test.createTestingModule({
-      providers: [BaseMenuService],
-    }).compile();
+    beforeEach(async () => {
+        const module: TestingModule = await Test.createTestingModule({
+            providers: [BaseMenuService],
+        }).compile()
 
-    service = module.get<BaseMenuService>(BaseMenuService);
-  });
+        service = module.get<BaseMenuService>(BaseMenuService)
+    })
 
-  it('should be defined', () => {
-    expect(service).toBeDefined();
-  });
-});
+    it("should be defined", () => {
+        expect(service).toBeDefined()
+    })
+})
Index: src/modules/role/role.entity.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\r\n    BaseEntity,\r\n    Column,\r\n    CreateDateColumn,\r\n    Entity,\r\n    JoinColumn,\r\n    JoinTable,\r\n    ManyToMany,\r\n    OneToMany,\r\n    PrimaryGeneratedColumn,\r\n    UpdateDateColumn,\r\n} from \"typeorm\"\r\nimport { User } from \"../user/user.entity\"\r\n\r\n@Entity(\"sys_roles\")\r\nexport class Role extends BaseEntity {\r\n    @PrimaryGeneratedColumn({ name: \"role_id\", comment: \"角色id\" })\r\n    roleId\r\n\r\n    @Column({ name: \"role_name\", comment: \"角色名称\" })\r\n    roleName?: string\r\n\r\n    @Column({ comment: \"角色别名\" })\r\n    describe?: string\r\n\r\n    @CreateDateColumn({ name: \"create_at\" })\r\n    createAt?: Date\r\n\r\n    @UpdateDateColumn({ name: \"update_at\" })\r\n    updateAt?: Date\r\n\r\n    @ManyToMany((type) => User, (user) => user.roles)\r\n    @JoinColumn({\r\n        referencedColumnName: \"user_id\",\r\n    })\r\n    users: User[]\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/modules/role/role.entity.ts b/src/modules/role/role.entity.ts
--- a/src/modules/role/role.entity.ts	(revision 7ad534ab3a12796689f90b43ade1bc3d67c50ad6)
+++ b/src/modules/role/role.entity.ts	(date 1638844247644)
@@ -29,7 +29,7 @@
     @UpdateDateColumn({ name: "update_at" })
     updateAt?: Date
 
-    @ManyToMany((type) => User, (user) => user.roles)
+    @ManyToMany(() => User, (user) => user.roles)
     @JoinColumn({
         referencedColumnName: "user_id",
     })
Index: src/pipe/validation.pipe.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\r\n    ArgumentMetadata,\r\n    BadRequestException,\r\n    Injectable,\r\n    Logger,\r\n    PipeTransform,\r\n} from \"@nestjs/common\"\r\nimport { plainToInstance } from \"class-transformer\"\r\nimport { validate } from \"class-validator\"\r\n\r\n@Injectable()\r\nexport class ValidationPipe implements PipeTransform {\r\n    async transform(value: any, { metatype }: ArgumentMetadata) {\r\n        if (!metatype || !this.toValidate(metatype)) {\r\n            // 如果没有传入验证规则，则不验证，直接返回数据\r\n            return value\r\n        }\r\n        // 将路由的传递的dto参数 转为对象\r\n        const object = plainToInstance(metatype, value)\r\n        // 验证dto对象\r\n        const errors = await validate(object)\r\n        // 是否存在校验不通过的情况 errors是一个数组\r\n        if (errors.length > 0) {\r\n            const msg = Object.values(errors[0].constraints)[0] // 只需要取第一个错误信息并返回即可\r\n            throw new BadRequestException(`Validation failed: ${msg}`)\r\n        }\r\n        return value\r\n    }\r\n\r\n    /**\r\n     * metatype的是否类型存在判断\r\n     * @param metatype\r\n     * @private\r\n     */\r\n    private toValidate(metatype: any): boolean {\r\n        const types: any[] = [String, Boolean, Number, Array, Object]\r\n        return !types.includes(metatype)\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pipe/validation.pipe.ts b/src/pipe/validation.pipe.ts
--- a/src/pipe/validation.pipe.ts	(revision 7ad534ab3a12796689f90b43ade1bc3d67c50ad6)
+++ b/src/pipe/validation.pipe.ts	(date 1638840263272)
@@ -2,7 +2,6 @@
     ArgumentMetadata,
     BadRequestException,
     Injectable,
-    Logger,
     PipeTransform,
 } from "@nestjs/common"
 import { plainToInstance } from "class-transformer"
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"67374cb2-bfec-44e3-88ef-b5605bb69ca9\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.gitignore\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/codeStyles/Project.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/codeStyles/Project.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/fast-node-service.iml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/jsLinters/eslint.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/prettier.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/package.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/package.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/filters/http-exception.filter.spec.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/filters/http-exception.filter.spec.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/filters/http-exception.filter.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/filters/http-exception.filter.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/interceptor/transform.interceptor.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/interceptor/transform.interceptor.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/modules/auth/auth.service.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/modules/auth/auth.service.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/modules/base-menu/base-menu.entity.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/modules/base-menu/base-menu.entity.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/modules/role/role.entity.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/modules/role/role.entity.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/modules/user/dto/create-user.dto.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/modules/user/dto/create-user.dto.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/modules/user/user.controller.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/modules/user/user.controller.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/modules/user/user.entity.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/modules/user/user.entity.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/modules/user/user.service.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/modules/user/user.service.ts\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"TypeScript File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"21uyvgSboR7ANrMinJbOBo7lQra\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showExcludedFiles\" value=\"false\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"nodejs.jest.jest_package\" value=\"$PROJECT_DIR$/node_modules/jest\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"pnpm\" />\r\n    <property name=\"prettierjs.PrettierConfiguration.Package\" value=\"D:\\project\\fast-node-server\\node_modules\\prettier\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"Errors\" />\r\n    <property name=\"ts.external.directory.path\" value=\"D:\\project\\fast-node-server\\node_modules\\typescript\\lib\" />\r\n    <property name=\"vue.rearranger.settings.migration\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"npm.start:debug\">\r\n    <configuration name=\"ValidationPipe\" type=\"JavaScriptTestRunnerJest\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <node-interpreter value=\"project\" />\r\n      <node-options value=\"\" />\r\n      <jest-package value=\"$PROJECT_DIR$/node_modules/jest\" />\r\n      <working-dir value=\"$PROJECT_DIR$\" />\r\n      <envs />\r\n      <scope-kind value=\"SUITE\" />\r\n      <test-file value=\"$PROJECT_DIR$/src/pipe/validation.pipe.spec.ts\" />\r\n      <test-names>\r\n        <test-name value=\"ValidationPipe\" />\r\n      </test-names>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Jest.ValidationPipe\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"67374cb2-bfec-44e3-88ef-b5605bb69ca9\" name=\"Changes\" comment=\"\" />\r\n      <created>1638805498741</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1638805498741</updated>\r\n      <workItem from=\"1638805500277\" duration=\"5268000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/fast_node_server$ValidationPipe.info\" NAME=\"ValidationPipe Coverage Results\" MODIFIED=\"1638809141705\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"JestJavaScriptTestRunnerCoverage\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 7ad534ab3a12796689f90b43ade1bc3d67c50ad6)
+++ b/.idea/workspace.xml	(date 1638925207097)
@@ -5,25 +5,24 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="67374cb2-bfec-44e3-88ef-b5605bb69ca9" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/fast-node-service.iml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/jsLinters/eslint.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/prettier.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/filters/http-exception.filter.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/filters/http-exception.filter.spec.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/filters/http-exception.filter.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/filters/http-exception.filter.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/interceptor/transform.interceptor.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/interceptor/transform.interceptor.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/app.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/app.module.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/modules/auth/auth.service.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/auth/auth.service.spec.ts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/modules/auth/auth.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/auth/auth.service.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/modules/base-menu/base-menu.entity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/base-menu/base-menu.entity.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/modules/base-menu/base-menu.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/base-menu/base-menu.controller.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/modules/base-menu/base-menu.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/base-menu/base-menu.module.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/modules/base-menu/base-menu.service.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/base-menu/base-menu.service.spec.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/modules/base-menu/base-menu.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/base-menu/base-menu.service.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/modules/role/role.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/role/role.controller.ts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/modules/role/role.entity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/role/role.entity.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/modules/role/role.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/role/role.module.ts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/modules/user/dto/create-user.dto.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/user/dto/create-user.dto.ts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/modules/user/user.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/user/user.controller.ts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/modules/user/user.entity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/user/user.entity.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/modules/user/user.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/user/user.module.ts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/modules/user/user.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/user/user.service.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/pipe/validation.pipe.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/pipe/validation.pipe.ts" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -61,8 +60,8 @@
     <property name="nodejs.jest.jest_package" value="$PROJECT_DIR$/node_modules/jest" />
     <property name="nodejs_package_manager_path" value="pnpm" />
     <property name="prettierjs.PrettierConfiguration.Package" value="D:\project\fast-node-server\node_modules\prettier" />
-    <property name="settings.editor.selected.configurable" value="Errors" />
-    <property name="ts.external.directory.path" value="D:\project\fast-node-server\node_modules\typescript\lib" />
+    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
+    <property name="ts.external.directory.path" value="D:\privateProject\fast-node-server\node_modules\typescript\lib" />
     <property name="vue.rearranger.settings.migration" value="true" />
   </component>
   <component name="RunManager" selected="npm.start:debug">
@@ -94,6 +93,8 @@
       <option name="presentableId" value="Default" />
       <updated>1638805498741</updated>
       <workItem from="1638805500277" duration="5268000" />
+      <workItem from="1638839007640" duration="8083000" />
+      <workItem from="1638875782920" duration="2519000" />
     </task>
     <servers />
   </component>
Index: .idea/codeStyles/Project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ProjectCodeStyleConfiguration\">\r\n  <code_scheme name=\"Project\" version=\"173\">\r\n    <option name=\"AUTODETECT_INDENTS\" value=\"false\" />\r\n    <HTMLCodeStyleSettings>\r\n      <option name=\"HTML_SPACE_INSIDE_EMPTY_TAG\" value=\"true\" />\r\n      <option name=\"HTML_ENFORCE_QUOTES\" value=\"true\" />\r\n    </HTMLCodeStyleSettings>\r\n    <JSCodeStyleSettings version=\"0\">\r\n      <option name=\"FORCE_SEMICOLON_STYLE\" value=\"true\" />\r\n      <option name=\"SPACE_BEFORE_FUNCTION_LEFT_PARENTH\" value=\"false\" />\r\n      <option name=\"FORCE_QUOTE_STYlE\" value=\"true\" />\r\n      <option name=\"ENFORCE_TRAILING_COMMA\" value=\"Remove\" />\r\n      <option name=\"SPACES_WITHIN_OBJECT_LITERAL_BRACES\" value=\"true\" />\r\n      <option name=\"SPACES_WITHIN_IMPORTS\" value=\"true\" />\r\n    </JSCodeStyleSettings>\r\n    <TypeScriptCodeStyleSettings version=\"0\">\r\n      <option name=\"FORCE_SEMICOLON_STYLE\" value=\"true\" />\r\n      <option name=\"SPACE_BEFORE_FUNCTION_LEFT_PARENTH\" value=\"false\" />\r\n      <option name=\"FORCE_QUOTE_STYlE\" value=\"true\" />\r\n      <option name=\"ENFORCE_TRAILING_COMMA\" value=\"Remove\" />\r\n      <option name=\"SPACES_WITHIN_OBJECT_LITERAL_BRACES\" value=\"true\" />\r\n      <option name=\"SPACES_WITHIN_IMPORTS\" value=\"true\" />\r\n      <option name=\"INDENT_CHAINED_CALLS\" value=\"false\" />\r\n    </TypeScriptCodeStyleSettings>\r\n    <VueCodeStyleSettings>\r\n      <option name=\"INTERPOLATION_NEW_LINE_AFTER_START_DELIMITER\" value=\"false\" />\r\n      <option name=\"INTERPOLATION_NEW_LINE_BEFORE_END_DELIMITER\" value=\"false\" />\r\n    </VueCodeStyleSettings>\r\n    <editorconfig>\r\n      <option name=\"ENABLED\" value=\"false\" />\r\n    </editorconfig>\r\n    <codeStyleSettings language=\"HTML\">\r\n      <option name=\"SOFT_MARGINS\" value=\"80\" />\r\n      <indentOptions>\r\n        <option name=\"INDENT_SIZE\" value=\"2\" />\r\n        <option name=\"CONTINUATION_INDENT_SIZE\" value=\"2\" />\r\n        <option name=\"TAB_SIZE\" value=\"2\" />\r\n      </indentOptions>\r\n    </codeStyleSettings>\r\n    <codeStyleSettings language=\"JavaScript\">\r\n      <option name=\"SOFT_MARGINS\" value=\"80\" />\r\n      <indentOptions>\r\n        <option name=\"INDENT_SIZE\" value=\"2\" />\r\n        <option name=\"CONTINUATION_INDENT_SIZE\" value=\"2\" />\r\n        <option name=\"TAB_SIZE\" value=\"2\" />\r\n      </indentOptions>\r\n    </codeStyleSettings>\r\n    <codeStyleSettings language=\"TypeScript\">\r\n      <option name=\"SOFT_MARGINS\" value=\"80\" />\r\n      <indentOptions>\r\n        <option name=\"INDENT_SIZE\" value=\"2\" />\r\n        <option name=\"CONTINUATION_INDENT_SIZE\" value=\"2\" />\r\n        <option name=\"TAB_SIZE\" value=\"2\" />\r\n        <option name=\"SMART_TABS\" value=\"true\" />\r\n      </indentOptions>\r\n    </codeStyleSettings>\r\n    <codeStyleSettings language=\"Vue\">\r\n      <option name=\"SOFT_MARGINS\" value=\"80\" />\r\n      <indentOptions>\r\n        <option name=\"CONTINUATION_INDENT_SIZE\" value=\"2\" />\r\n      </indentOptions>\r\n    </codeStyleSettings>\r\n  </code_scheme>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/codeStyles/Project.xml b/.idea/codeStyles/Project.xml
--- a/.idea/codeStyles/Project.xml	(revision 7ad534ab3a12796689f90b43ade1bc3d67c50ad6)
+++ b/.idea/codeStyles/Project.xml	(date 1638845055195)
@@ -46,7 +46,7 @@
       </indentOptions>
     </codeStyleSettings>
     <codeStyleSettings language="TypeScript">
-      <option name="SOFT_MARGINS" value="80" />
+      <option name="SOFT_MARGINS" value="120" />
       <indentOptions>
         <option name="INDENT_SIZE" value="2" />
         <option name="CONTINUATION_INDENT_SIZE" value="2" />
Index: src/modules/user/dto/create-user.dto.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IsNotEmpty, IsString, IsArray } from \"class-validator\"\r\n\r\nexport class CreateUserDto {\r\n    @IsNotEmpty({ message: \"用户名不能为空\" })\r\n    readonly userName: string\r\n    @IsNotEmpty({ message: \"密码不能为空\" })\r\n    readonly passWord: string\r\n    @IsNotEmpty({ message: \"用户昵称不能为空\" })\r\n    readonly nikeName: string\r\n    @IsNotEmpty({ message: \"角色id不能为空\" })\r\n    @IsString({ message: \"角色id只能为string类型\" })\r\n    readonly roleId: string\r\n    @IsNotEmpty({ message: \"角色id列表不能为空\" })\r\n    @IsArray({ message: \"角色id只能为Array类型\" })\r\n    readonly roleIds: string[]\r\n    readonly userAvatar: string\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/modules/user/dto/create-user.dto.ts b/src/modules/user/dto/create-user.dto.ts
--- a/src/modules/user/dto/create-user.dto.ts	(revision 7ad534ab3a12796689f90b43ade1bc3d67c50ad6)
+++ b/src/modules/user/dto/create-user.dto.ts	(date 1638840160261)
@@ -3,15 +3,20 @@
 export class CreateUserDto {
     @IsNotEmpty({ message: "用户名不能为空" })
     readonly userName: string
+
     @IsNotEmpty({ message: "密码不能为空" })
     readonly passWord: string
+
     @IsNotEmpty({ message: "用户昵称不能为空" })
     readonly nikeName: string
+
     @IsNotEmpty({ message: "角色id不能为空" })
     @IsString({ message: "角色id只能为string类型" })
     readonly roleId: string
+
     @IsNotEmpty({ message: "角色id列表不能为空" })
     @IsArray({ message: "角色id只能为Array类型" })
     readonly roleIds: string[]
+
     readonly userAvatar: string
 }
